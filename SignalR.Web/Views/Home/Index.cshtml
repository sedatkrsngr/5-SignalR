@{
    ViewData["Title"] = "Home Page";
}

@section Scripts
{
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <!--Bu sınıfı eklemek için proje->Add->Client-Side Library-> provider: unpkg, library: microsoft/signalr ardından Choose spesific files diyip sadece browser içerisindeki signalr.js ve signalr.min.js seçip install-->

    <script type="text/javascript">

        $(document).ready(() => {

            var connection = new signalR.HubConnectionBuilder().configureLogging(signalR.LogLevel.Information).withAutomaticReconnect().withUrl("https://localhost:44380/MyHub").build();//SignalR.API url'im + /MyHub
            //Yukarıda aynı zamanda Information seviyesinden itibaren  consol tarafına dinle ve yaz demek önem sırasına göre  Trace, Debug, Information, Warning, Error, Critical olarak önem yükseliyor zorunlu degil
            //Yukarıda withAutomaticReconnect() methodu ise 0,2,10,30 saniyede sırasıyla başarılı olaran kadar kopan bağlantı varsa bağlanmayı dener.0 sn olmayınca 2 sn bekler yine olmazsa 10sn ve en son 30 sn bekler
            // bu saniyeleri kendimiz vermek istiyorsak withAutomaticReconnect([1000,3000,5000,7000]) burada 1,3,5,7 saniye yaptık bu methodda zorunlu değil


            //Functions
            function connectionDurumu() {
                $("#connectionDurumu").text(connection.connectionState);
            }

            function start() {
                connection.start()
                    .then(() =>//Başarılı olursa gerçekleşecek Method
                    {
                        connectionDurumu();
                        $("#yukleniyor").hide();
                    })
                    .catch((err) =>//Hata verirse gerçekleşecek method
                    {
                        console.log(err);//consolda görmek için ekledik
                        setTimeout(() => {//2 saniye sonra bağlantı tekrar denensin
                            start(), 2000
                        });
                    });
            }
            //

            connectionDurumu();

            start();

            //Standart client üyeliği örn
            connection.on("AdiAl", (name) => {//Bir methoda üye olma işlemi on ile gerçekleşir. Önceden dediğimiz gibi signalr tüm clientlara istek gönderir sadece üye olanlar görür üye olunduğunda dönen değere name dedik isimler geldiği için

                $("#namesList").append(`<li class="list-group-item"> ${name} </li>`)//   ` bu işaret  altgr + ,   tuşları ile oluyor ' bununla karıştırma
            });
            //


            //AutomaticReconnect Methods  withAutomaticReconnect() connectionda kullanılırsa, kullanabiliriz
            connection.onreconnecting(err => { //withAutomaticReconnect() metodunda ilk tekrar istek yaptığında bu method çalışır
                $("#yukleniyor").show();
                connectionDurumu();
                console.log("onreconnection :" + err)
            });

            connection.onreconnected(connectionId => {  //withAutomaticReconnect() metodunda yeniden bağlantı gerçekleştiğinde bu method çalışır
                $("#yukleniyor").hide();
                connectionDurumu();
            });

            connection.onclose(() => {//withAutomaticReconnect() metodunda yeniden bağlantı gerçekleşmediğinde bu method çalışır
                $("#yukleniyor").hide();
                connectionDurumu();
                start();//Yeniden bağlanmayı denesin
            });
            //

            //VirtualMethods üyeliği örn  APı-> MyHub içerisinde override edilen connect ve disconnect metotları
            connection.on("KullaniciSayisiDön", (KullaniciSayisi) => {
                $("#kullaniciSayisi").text(KullaniciSayisi);
            });
            //

            //IHubxContext Örn. MyHub Clasına Controller içinden ulaştık
            connection.on("Duyuru", (duyurumetni) => {
                $("#duyuru").html(`<div class="alert alert-danger">${duyurumetni}</div>`);
            });

            //

            //Click Button
            $("#btnNameSave").click(() => {

                connection.invoke("SendName", $("#txtName").val())//server tarafına istek atmak için kullanılır invoke SendName SignalR.API->MyHub içerisindeki method
                    .then(() =>//Başarılı olursa gerçekleşecek Method
                    {
                        console.log("islem gerceklestirildi")
                    })
                    .catch((err) =>//Hata verirse gerçekleşecek method
                    {
                        console.log(err)
                    });
            });

        });


    </script>
}

<div class="row">
    <div class="col-md-8 offset-2">
        <input type="text" id="txtName" class="form-control" />
        <button id="btnNameSave" class="btn btn-primary">İsim Kaydet</button>

        <div class="alert alert-info">
            <div class="float-left">
                Bağlantı Durumu: <strong id="connectionDurumu"></strong>
                ,Kullanici Sayisi: <strong id="kullaniciSayisi"></strong>
            </div>
            <div class="float-right">
                <div id="yukleniyor" class="spinner-border" role="status">
                    <span class="sr-only">Yükleniyor...</span>
                </div>
            </div>
            <div class="clearfix"></div>
        </div>
        <div id="duyuru"></div>
    </div>

    <div class="col-md-8 offset-2">
        <ul class="list-group" id="namesList">
        </ul>
    </div>
</div>